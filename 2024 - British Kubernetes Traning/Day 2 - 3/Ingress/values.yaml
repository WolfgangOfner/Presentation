replicaCount: 1

image:
  repository: wolfgangofner/ingressdemo
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: __IngressEnabled__
  className: __ClassName__
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
  namespace: __K8sNamespace__
  path: /  
  pathType: Prefix
  hosts:
    - __URL__
  tls:
    - secretName: __TlsSecretName__
      hosts:
        - __URL__

# ingress:
#   enabled: true
#   className: nginx
#   annotations: 
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     cert-manager.io/cluster-issuer: letsencrypt
#   namespace: ingress
#   path: /  
#   pathType: Prefix
#   hosts:
#     - ingress.training.programmingwithwolfgang.com
#   tls:
#     - secretName: ingress-tls-secret
#       hosts:
#         - ingress.training.programmingwithwolfgang.com

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
